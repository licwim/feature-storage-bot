name: Deploy
run-name: Deploy ${{ github.ref_name }} (${{ github.event.workflow_run.head_commit.message }}) to ${{ inputs.stand }}

on:
  workflow_dispatch:
    inputs:
      stand:
        description: 'Deploy to stand'
        required: true
        default: 'dev'
        type: choice
        options:
          - dev
          - prod

jobs:
  prod-deploy:
    runs-on: self-hosted
    continue-on-error: true
    if: github.event.inputs.stand == 'prod'
    environment: production
    env:
      BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      API_ID: ${{ secrets.TELEGRAM_API_ID }}
      API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
      DB_HOST: ${{ vars.DB_HOST }}
      DB_NAME: ${{ vars.DB_NAME }}
      DB_USER: ${{ vars.DB_USER }}
      DB_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DOCKER_HUB_USERNAME: licwim
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}
      - name: Latest release info
        id: release-info
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
      - name: Start app container
        run: |
          export TAG=$(echo "${{ github.ref_name }}" | sed 's|/|-|g')
          export IMAGE_NAME="${{ github.repository }}:$TAG"
          echo "IMAGE_NAME = $IMAGE_NAME"
          docker pull "$IMAGE_NAME"
          export BUILD_VERSION=$(docker image inspect "$IMAGE_NAME" --format='{{.Config.Labels.build}}')
          export RELEASE=${{ steps.release-info.outputs.release }}
          echo "BUILD_VERSION = $BUILD_VERSION"
          echo "RELEASE = $RELEASE"
          docker compose -f docker-compose.prod.yml down --remove-orphans
          docker compose -f docker-compose.prod.yml up -d

  dev-deploy:
    runs-on: self-hosted
    continue-on-error: true
    if: github.event.inputs.stand == 'dev'
    environment: development
    env:
      BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      API_ID: ${{ secrets.TELEGRAM_API_ID }}
      API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
      DB_HOST: ${{ vars.DB_HOST }}
      DB_NAME: ${{ vars.DB_NAME }}
      DB_USER: ${{ vars.DB_USER }}
      DB_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DOCKER_HUB_USERNAME: licwim
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
    steps:
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}
      - name: Latest release info
        id: release-info
        uses: pozetroninc/github-action-get-latest-release@master
        with:
          repository: ${{ github.repository }}
      - name: Start app container
        run: |
          export TAG=$(echo "${{ github.ref_name }}" | sed 's|/|-|g')
          export IMAGE_NAME="${{ github.repository }}:$TAG"
          echo "IMAGE_NAME = $IMAGE_NAME"
          docker pull "$IMAGE_NAME"
          export BUILD_VERSION=$(docker image inspect "$IMAGE_NAME" --format='{{.Config.Labels.build}}')
          export RELEASE=${{ steps.release-info.outputs.release }}
          echo "BUILD_VERSION = $BUILD_VERSION"
          echo "RELEASE = $RELEASE"
          docker compose -f docker-compose.dev.yml up -d