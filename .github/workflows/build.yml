name: Build

on:
  push:
    branches:
      - master
      - 'release/**'
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - master
      - 'release/**'

jobs:
  build:
    runs-on: self-hosted
    env:
      DOCKER_HUB_USERNAME: licwim
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
    outputs:
      image_name: ${{ steps.build-image.outputs.IMAGE_NAME }}
      build_version: ${{ steps.build-image.outputs.BUILD_VERSION }}
    steps:
    - uses: actions/checkout@v2
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_HUB_USERNAME }}
        password: ${{ env.DOCKER_HUB_TOKEN }}
    - name: Build and push image
      id: build-image
      run: |
        TAG=$(if [ ${{ github.event_name }} = 'pull_request' ]; then echo "${{ github.head_ref }}"; else echo "${{ github.ref_name }}"; fi | sed 's|/|-|g')
        IMAGE_NAME="${{ github.repository }}:$TAG"
        BUILD_VERSION="$TAG-${{ github.sha }}"
        echo "BUILD_VERSION = $BUILD_VERSION"
        docker build . --file Dockerfile --label sha=${{ github.sha }} --label build=$BUILD_VERSION --tag "$IMAGE_NAME"
        echo "IMAGE_NAME = $IMAGE_NAME"
        docker push "$IMAGE_NAME"
        echo "::set-output name=IMAGE_NAME::$IMAGE_NAME"
        echo "::set-output name=BUILD_VERSION::$BUILD_VERSION"
  deploy-approve:
    needs: build
    environment:
      name: approvers
    runs-on: self-hosted
    steps:
      - name: manual approve
        run: |
          echo "Manually approved"
  prod-deploy:
    needs: deploy-approve
    runs-on: self-hosted
    continue-on-error: true
    environment: production
    env:
      CONTAINER_NAME: fsb-app
      NETWORK_NAME: feature-storage-bot-network
      BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
      API_ID: ${{ secrets.TELEGRAM_API_ID }}
      API_HASH: ${{ secrets.TELEGRAM_API_HASH }}
      DB_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DOCKER_HUB_USERNAME: licwim
      DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}
      ADMIN_LOCAL_LOCATION: /var/apps/feature-storage-bot/admin
      ADMIN_CONTAINER_LOCATION: /var/app/admin
    steps:
    - name: Login to DockerHub
      uses: docker/login-action@v2
      with:
        username: ${{ env.DOCKER_HUB_USERNAME }}
        password: ${{ env.DOCKER_HUB_TOKEN }}
    - name: Latest release info
      id: release-info
      uses: pozetroninc/github-action-get-latest-release@master
      with:
        repository: ${{ github.repository }}
    - name: Start app container
      run: |
        TAG=$(echo "${{ github.ref_name }}" | sed 's|/|-|g')
        IMAGE_NAME="${{ github.repository }}:$TAG"
        echo "IMAGE_NAME = $IMAGE_NAME"
        docker pull "$IMAGE_NAME"
        BUILD_VERSION=$(docker image inspect "$IMAGE_NAME" --format='{{.Config.Labels.build}}')
        echo "BUILD_VERSION = $BUILD_VERSION"
        docker stop "$CONTAINER_NAME" || true
        docker rm "$CONTAINER_NAME" || true
        docker run \
          --log-driver=journald \
          --label branch=${{ github.ref_name }} \
          -v "$ADMIN_LOCAL_LOCATION":"$ADMIN_CONTAINER_LOCATION" \
          -e BOT_TOKEN="$BOT_TOKEN" \
          -e API_ID="$API_ID" \
          -e API_HASH="$API_HASH" \
          -e DB_PASSWORD="$DB_PASSWORD" \
          -e BUILD_VERSION="$BUILD_VERSION" \
          -e RELEASE=${{ steps.release-info.outputs.release }} \
          -e PIPENV_DOTENV_LOCATION="$ADMIN_CONTAINER_LOCATION/env" \
          -e TZ="Europe/Moscow" \
          -d \
          --restart on-failure:10 \
          --network "$NETWORK_NAME" \
          --name "$CONTAINER_NAME" \
          "$IMAGE_NAME"
